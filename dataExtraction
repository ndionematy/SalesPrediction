# Ce script permet d'extraire les fichiers de données de Kaggle
#|--------------------------------------------------------------|#
# Les données sont disponibles sur kaggle via le lien ci-après: |#
# https://www.kaggle.com/competitions/favorita-grocery-sales-forecasting/data |#


#%% Libraries 
import py7zr
import os
import datetime
import numpy as np
import pandas as pd
import dask.dataframe as dd


#%% Chargement des fichiers de Kaggle
input_path = '..\Data'
output_path = '..\Extracted'

files = ['train', 'test', 'items', 'stores', 'holidays_events', 'oil', 'transactions', 'sample_submission']
if not os.path.exists(output_path):
    for file in files:
        file = 'sample_submission'
        file_path =  os.path.join(input_path, file+'.csv.7z')
        with py7zr.SevenZipFile(file_path, mode='r') as zipfile:
            zipfile.extractall(path=output_path)
        print('extracted:', file_path)
        


#%% Fichiers de données
print('Lecture de train.csv')
train = dd.read_csv(
    os.path.join(output_path, 'train.csv'),
    usecols=[1, 2, 3, 4, 5],
    dtype={'item_nbr': 'category', 'store_nbr': 'category', 'onpromotion': 'object'},
    parse_dates=['date']       
)

print('Lecture de test.csv')
test = dd.read_csv(
    os.path.join(output_path, 'test.csv'),
    dtype={'item_nbr': 'category', 'store_nbr': 'category', 'onpromotion': 'object'},
    parse_dates=['date']
)

print('Lecture de sample_submissions.csv')
sample = dd.read_csv(
    os.path.join(output_path, 'sample_submission.csv'),
)

print('Lecture de items.csv')
items = dd.read_csv(
    os.path.join(output_path, 'items.csv'),
    dtype={'item_nbr': 'category', 'class': 'category', 'perishable': bool},
)

print('Lecture de stores.csv')
stores = dd.read_csv(
    os.path.join(output_path, 'stores.csv'),
    dtype={'store_nbr': 'category', 'city': 'category', 'state': 'category', 'type': 'category', 'cluster': 'category'},
)

print('Lecture de holidays_events.csv')
holidays = dd.read_csv(
    os.path.join(output_path, 'holidays_events.csv'),
    parse_dates=['date'],
    dtype={'type': 'category', 'local': 'category', 'locale_name': 'category'}
)

print('Lecture de oil.csv')
oil = dd.read_csv(
    os.path.join(output_path, 'oil.csv'),
    parse_dates=['date']
)

print('Lecture de transactions.csv')
transactions = dd.read_csv(
    os.path.join(output_path, 'transactions.csv'),
    dtype={'store_nbr': 'category'},
    parse_dates=['date']
)


#%% Visualisation des caractéristiques de chaque dataset
def see(data):
    print(f':{data}')
    print(train.dtypes)
    print("==="*50)
    
for file in files:
    see(file)
